include "taxonomy.diaspec";

// kitchen controller
controller KitchenController {
		when provided KitchenStatus
		do ActOnCoocker on Cooker;
}

context KitchenStatus as KitchenState {
	when provided LastMove
	get state from ContactSensor
	always publish;
		when provided LastMoveBehindKitchen
	get state from ContactSensor
	always publish;
}

context LastMove as Float  {
	when provided motion from MotionDetector
	get motion from MotionDetector
	always publish;
}

context LastMoveBehindKitchen as Float  {
	when provided motion from MotionDetectorBehindKitchen
	get motion from MotionDetectorBehindKitchen
	always publish;
}

device ContactSensor extends Sensor {
 source state as DoorState;
}

device ElectricMeter extends EnergyMeter {
 source currentElectricConsumption as KitchenState;
}

device MotionDetectorBehindKitchen extends Sensor {
 source motion as StatePresence;
}

device MotionDetector extends Sensor {
 source motion as StatePresence;
}

enumeration StatePresence{
	TARGET,MISSED
}
enumeration DoorState{
	OPEN,CLOSED
}
enumeration KitchenState{
	WARN,OK,STOP
}


device Cooker extends Appliance{
	source statusKitchen as KitchenState;
	action ActOnCoocker;
}

action ActOnCoocker{
	stopCoocker();
}


