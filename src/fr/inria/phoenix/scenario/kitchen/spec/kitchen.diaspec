include "taxonomy.diaspec";

// kitchen controller
controller KitchenController {
	when provided KitchenStatus do ActOnCoocker on Cooker;
}

context KitchenStatus as KitchenState {
	when provided CoockerStatus get timerTriggered from Timer, LastMove, state from ContactSensor maybe publish;
}
structure GetSensor{
	sensor1 as Float;
	sensor2 as Float;
}
context LastMove as GetSensor {
	when provided motion from MotionDetector get motion from MotionDetector always publish;
}
context CoockerStatus as Boolean{
	when provided state from Cooker
	get state from Cooker,
	currentElectricConsumption from ElectricMeter
	always publish;
}

device ContactSensor extends Sensor {
	source state as DoorState;
}

device MotionDetector extends Sensor {
	source motion as StatePresence;
}

device Cooker extends Appliance {
	source state as State;
	action ActOnCoocker;
}

device Timer extends BuiltIn {
	source timerTriggered as String indexed by timerId as String;
}

action ActOnCoocker {
	stopCoocker();
}

device ElectricMeter extends EnergyMeter {
	source electricConsumption as Float indexed by date as Date;
	source currentElectricConsumption as Float;
}

enumeration StatePresence {
	TARGET, MISSED
}

enumeration DoorState {
	OPEN, CLOSED
}

structure State {
	state as String;
	timestamp as String;
}

enumeration CoockerState {
	ON, OFF
}
enumeration KitchenState {
	OK,WARN,STOP
}